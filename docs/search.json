[
  {
    "objectID": "01.html#section",
    "href": "01.html#section",
    "title": "Trees and Nets",
    "section": "",
    "text": "import numpy as np"
  },
  {
    "objectID": "01.html#decision-tree",
    "href": "01.html#decision-tree",
    "title": "Trees and Nets",
    "section": "Decision tree",
    "text": "Decision tree\n\nSplit sample sucessively into smaller subsamples by answering “yes-no” questions.\nEach question is based on a single variable: is it above a threshold?\nSplit a specified number of times (depth). Final subsamples are called leaves.\nFor regression problems, the prediction for each observation is the mean of the training observations that end up in the same leaf.\nFor classification problems the prediction is the category that occurs most frequently in the leaf."
  },
  {
    "objectID": "01.html#example-of-a-tree",
    "href": "01.html#example-of-a-tree",
    "title": "Trees and Nets",
    "section": "Example of a tree",
    "text": "Example of a tree"
  },
  {
    "objectID": "01.html#decision-tree-splitting-for-regression",
    "href": "01.html#decision-tree-splitting-for-regression",
    "title": "Trees and Nets",
    "section": "Decision tree splitting for regression",
    "text": "Decision tree splitting for regression\n\nAt each step, the algorithm chooses a variable and threshold to split on.\nIn a regression problem, the standard decision criterion is SSE.\n\nError = actual - mean of subset\nOutliers tend to get separated into their own subsets (less so for SAE)\n\nThere are also other relatively standard criteria, for example in scikit-learn."
  },
  {
    "objectID": "01.html#decision-tree-splitting-for-classification",
    "href": "01.html#decision-tree-splitting-for-classification",
    "title": "Trees and Nets",
    "section": "Decision tree splitting for classification",
    "text": "Decision tree splitting for classification\n\nLet \\(k\\) = number of classes. Suppose a split results in \\(n\\) observations in a subset. Let \\(x_i=\\) fraction in class \\(i\\).\nDefault criterion for scikit-learn is Gini = \\(1 - \\sum_{i=1}^k x_i^2\\)\nIf we consider \\(\\sum x_i^2\\) subject to \\(\\sum x_i=n\\), the value is maximized at \\(x_i=1/n\\) and minimized at boundaries: some \\(x_i=1\\) and others equal 0.\n\nSo, maximizing Gini means trying to create “pure” subsets (all of same type).\nThere are also other standard criteria, for example entropy and log loss."
  },
  {
    "objectID": "01.html#random-forest",
    "href": "01.html#random-forest",
    "title": "Trees and Nets",
    "section": "Random forest",
    "text": "Random forest\n\nMultiple trees fit to random data\nData for each tree is a bootstrapped sample:\n\nrandom selection of rows (with replacement)\nsame size as original sample\n\nPrediction is average of predictions of the trees\nHyperparameters = number of trees and depth of trees"
  },
  {
    "objectID": "01.html#boosting",
    "href": "01.html#boosting",
    "title": "Trees and Nets",
    "section": "Boosting",
    "text": "Boosting\n\nBoosting means combining models, for example trees.\nPrediction is sum of individual predictions.\nGradient boosting fits second model to errors of first, third to errors of first two combined, …\nAdaptive boosting fits original target but overweights errors from prior model\nLearning rate (weight to put on new model) is a hyperparameter"
  },
  {
    "objectID": "01.html#multi-layer-perceptrons",
    "href": "01.html#multi-layer-perceptrons",
    "title": "Trees and Nets",
    "section": "Multi-layer perceptrons",
    "text": "Multi-layer perceptrons\n\nA multi-layer perceptron (MLP) consists of “neurons” arranged in layers.\nA neuron is a mathematical function. It takes inputs \\(x_1, \\ldots, x_n\\), calculates a function \\(y=f(x_1, \\ldots, x_n)\\) and passes \\(y\\) to the neurons in the next level.\nThe inputs in the first layer are the predictors.\nThe inputs in successive layers are the calculations from the prior level.\nThe last layer is a single neuron that produces the output."
  },
  {
    "objectID": "01.html#illustration",
    "href": "01.html#illustration",
    "title": "Trees and Nets",
    "section": "Illustration",
    "text": "Illustration\n\n\n\n\n\n\n\ninput is \\(x \\in \\mathbb{R}^4\\)\nfunctions \\(f_1, \\ldots, f_5\\) of \\(x\\) are calculated (called “hidden layer”)\noutput is \\(g(f_1(x), \\ldots, f_5(x))\\)"
  },
  {
    "objectID": "01.html#rectified-linear-units",
    "href": "01.html#rectified-linear-units",
    "title": "Trees and Nets",
    "section": "Rectified linear units",
    "text": "Rectified linear units\n\nThe usual function for the neurons (except in the last layer) is \\[ y = \\max(0,b+w_1x_1 + \\cdots + w_nx_n)\\] Parameters \\(b\\) (called bias) and \\(w_1, \\ldots w_n\\) (called weights) are different for different neurons.\nThis function is called a rectified linear unit (RLU).\n\nThere are other choices. This function in general is called the “activation function.”"
  },
  {
    "objectID": "01.html#analogy-to-neurons-firing",
    "href": "01.html#analogy-to-neurons-firing",
    "title": "Trees and Nets",
    "section": "Analogy to neurons firing",
    "text": "Analogy to neurons firing\nIf \\(w_i>0\\) and \\(b<0\\), then \\(y>0\\) only when \\(x_i\\) are large enough.\nA neuron fires when it is sufficiently stimulated by signals from other neurons (in prior layer)."
  },
  {
    "objectID": "01.html#neural-net-output-function",
    "href": "01.html#neural-net-output-function",
    "title": "Trees and Nets",
    "section": "Neural net output function",
    "text": "Neural net output function\nFor regression problems, the output function is linear\n\\[ y = b+w_1x_1 + \\cdots + w_nx_n\\].\n\nFor classification, there is a linear function for each class and the output is the set of probabilities \\(e^{y_i}/\\sum e^{y_j}\\)."
  },
  {
    "objectID": "01.html#deep-learning",
    "href": "01.html#deep-learning",
    "title": "Trees and Nets",
    "section": "Deep learning",
    "text": "Deep learning\n\nDeep learning means a neural network with many layers. It is behind facial recognition, self-driving cars, …\nNeed specialized library, probably TensorFlow (from Google) or PyTorch (from Facebook), and probably need graphical processing units (GPUs) – i.e., run on video cards\nHands-On Machine Learning with Scikit-Learn and TensorFlow\nDeep Learning for Coders with fastai and PyTorch (also fastai website)"
  },
  {
    "objectID": "01.html",
    "href": "01.html",
    "title": "Trees and Nets",
    "section": "",
    "text": "import numpy as np\n\n\n\n\n\n\n\nSplit sample sucessively into smaller subsamples by answering “yes-no” questions.\nEach question is based on a single variable: is it above a threshold?\nSplit a specified number of times (depth). Final subsamples are called leaves.\nFor regression problems, the prediction for each observation is the mean of the training observations that end up in the same leaf.\nFor classification problems the prediction is the category that occurs most frequently in the leaf.\n\n\n\n\n\n\n\n\n\nAt each step, the algorithm chooses a variable and threshold to split on.\nIn a regression problem, the standard decision criterion is SSE.\n\nError = actual - mean of subset\nOutliers tend to get separated into their own subsets (less so for SAE)\n\nThere are also other relatively standard criteria, for example in scikit-learn.\n\n\n\n\n\nLet \\(k\\) = number of classes. Suppose a split results in \\(n\\) observations in a subset. Let \\(x_i=\\) fraction in class \\(i\\).\nDefault criterion for scikit-learn is Gini = \\(1 - \\sum_{i=1}^k x_i^2\\)\nIf we consider \\(\\sum x_i^2\\) subject to \\(\\sum x_i=n\\), the value is maximized at \\(x_i=1/n\\) and minimized at boundaries: some \\(x_i=1\\) and others equal 0.\n\nSo, maximizing Gini means trying to create “pure” subsets (all of same type).\nThere are also other standard criteria, for example entropy and log loss.\n\n\n\n\n\nMultiple trees fit to random data\nData for each tree is a bootstrapped sample:\n\nrandom selection of rows (with replacement)\nsame size as original sample\n\nPrediction is average of predictions of the trees\nHyperparameters = number of trees and depth of trees\n\n\n\n\n\nBoosting means combining models, for example trees.\nPrediction is sum of individual predictions.\nGradient boosting fits second model to errors of first, third to errors of first two combined, …\nAdaptive boosting fits original target but overweights errors from prior model\nLearning rate (weight to put on new model) is a hyperparameter"
  },
  {
    "objectID": "a01-fvs-pvs.html",
    "href": "a01-fvs-pvs.html",
    "title": "Time and Money:Future and Present Values",
    "section": "",
    "text": "If invested funds earn a stable rate of return and funds are not withdrawn, then the account grows exponentially."
  },
  {
    "objectID": "a01-fvs-pvs.html#section",
    "href": "a01-fvs-pvs.html#section",
    "title": "Time and Money:Future and Present Values",
    "section": "",
    "text": "Due to exponential growth, the investment period and rate of return matter a lot!\n\nat 8%, doubling the investment horizon from 15 to 30 years implies the growth in the account increases from $2.17 to $9.06 (more than quadrupling).\nat a 30 year horizon, changing the rate of return from 4% to 8% implies the growth in the account increases from $2.24 to $9.06 (more than quadrupling)."
  },
  {
    "objectID": "a01-fvs-pvs.html#calclating-the-account-growth",
    "href": "a01-fvs-pvs.html#calclating-the-account-growth",
    "title": "Time and Money:Future and Present Values",
    "section": "Calclating the account growth",
    "text": "Calclating the account growth\n\nWith 1 year at 8%, \\(1 \\rightarrow 1.08\\). After a 2nd year, we have\n\n\\[ 1.08 + (0.08 \\times 1.08) = (1 \\times 1.08) + (0.08 \\times 1.08) \\]\n\n\nwhich is \\(1.08^2\\).\n\n\n After \\(n\\) years at 8%, \\(1 \\rightarrow 1.08^n\\)."
  },
  {
    "objectID": "a01-fvs-pvs.html#future-values-and-present-values",
    "href": "a01-fvs-pvs.html#future-values-and-present-values",
    "title": "Time and Money:Future and Present Values",
    "section": "Future values and present values",
    "text": "Future values and present values\n\nWe call $\\(1.08^n\\) the future value of $1 at 8% for \\(n\\) years.\nMore generally, if we start with \\(x\\) dollars, we will have \\(1.08^nx\\) dollars after \\(n\\) years at 8%, so \\(1.08^nx\\) is the future value of \\(x\\).\nSimilarly, we call \\(x\\) the present value of \\(1.08^nx\\).\n\nEquivalently, for any \\(y\\), we call \\(y/1.08^n\\) the present value of \\(y\\)."
  },
  {
    "objectID": "a01-fvs-pvs.html#future-and-present-value-factors",
    "href": "a01-fvs-pvs.html#future-and-present-value-factors",
    "title": "Time and Money:Future and Present Values",
    "section": "Future and present value factors",
    "text": "Future and present value factors\n\n\nWe go from present \\(x\\) to future \\(y\\) by multiplying by \\(1.08^n\\), so we call \\(1.08^n\\) the future value factor.\nMore generally, \\((1+r)^n\\) is the future value factor.\nSimilarly, we go from future \\(y\\) to present \\(x\\) by multiplying by \\(1/1.08^n\\), so we call \\(1/1.08^n = 1/(1+r)^n\\) the present value factor."
  },
  {
    "objectID": "a01-fvs-pvs.html#present-value-factors",
    "href": "a01-fvs-pvs.html#present-value-factors",
    "title": "Time and Money:Future and Present Values",
    "section": "Present value factors",
    "text": "Present value factors\nPV factors (also called discount factors) are smaller when the horizon is longer or the rate of return is larger."
  },
  {
    "objectID": "a01-fvs-pvs.html#fv-of-multiple-cash-flows",
    "href": "a01-fvs-pvs.html#fv-of-multiple-cash-flows",
    "title": "Time and Money:Future and Present Values",
    "section": "FV of multiple cash flows",
    "text": "FV of multiple cash flows\n\nSuppose we invest \\(x_0\\) dollars today, another \\(x_1\\) dollars in 1 year, etc. for \\(m\\) years and earn \\(r\\) per year.\n\nWhat will we have in \\(n \\ge m\\) years?\n\\(x_0 \\rightarrow (1+r)^nx_0\\)\n\\(x_1 \\rightarrow (1+r)^{n-1}x_1\\)\n\\(\\ldots, x_m \\rightarrow (1+r)^{n-m}x_m\\)\nSo, we end up with\n\n\n\\[(1+r)^n x_0 + \\cdots + (1+r)^{n-m}x_m\\]"
  },
  {
    "objectID": "a01-fvs-pvs.html#pv-of-multiple-cash-flows",
    "href": "a01-fvs-pvs.html#pv-of-multiple-cash-flows",
    "title": "Time and Money:Future and Present Values",
    "section": "PV of multiple cash flows",
    "text": "PV of multiple cash flows\n\nSuppose we want to spend \\(y_1\\) dollars in 1 year, \\(y_2\\) dollars in 2 years, and so on for \\(n\\) years.\nIf we want to finance this from existing savings, how much do we need to have, assuming we earn \\(r\\) each year?\nWe need \\(y_1/(1+r)\\) to finance \\(y_1\\) in 1 year.\nWe need \\(y_2/(1+r)^2\\) to finance \\(y_2\\) in 2 years.\nEtc., so we need\n\n\n\\[\\frac{y_1}{1+r} + \\cdots + \\frac{y_n}{(1+r)^n}\\]"
  },
  {
    "objectID": "a01-fvs-pvs.html#pv-and-fv-factors-with-numpy",
    "href": "a01-fvs-pvs.html#pv-and-fv-factors-with-numpy",
    "title": "Time and Money:Future and Present Values",
    "section": "PV and FV factors with numpy",
    "text": "PV and FV factors with numpy\nimport numpy as np\n\nm = 10\nn = 15\nr = 0.08\n\nfvFactors = (1+r)**np.arange(n, n-m-1, -1)\npvFactors = (1+r)**np.arange(-1, -n-1, -1)\nfvFactors are\n\\[(1+r)^n, \\ldots (1+r)^{n-m}\\]\npvFactors are\n\\[\\frac{1}{1+r}, \\ldots, \\frac{1}{(1+r)^n}\\]"
  },
  {
    "objectID": "a01-fvs-pvs.html#fv-of-multiple-cash-flows-1",
    "href": "a01-fvs-pvs.html#fv-of-multiple-cash-flows-1",
    "title": "Time and Money:Future and Present Values",
    "section": "FV of multiple cash flows",
    "text": "FV of multiple cash flows\nimport numpy as np\nn = 10\nm = 4\nr = 0.08\nx0, x1, x2, x3, x4 = 100, 120, 130, 140, 150\nx = np.array([x0, x1, x2, x3, x4])\nfvFactors = (1+r)**np.arange(n, n-m-1, -1)\ntotal = np.sum(x*fvFactors)"
  },
  {
    "objectID": "a01-fvs-pvs.html#pv-of-multiple-cash-flows-1",
    "href": "a01-fvs-pvs.html#pv-of-multiple-cash-flows-1",
    "title": "Time and Money:Future and Present Values",
    "section": "PV of multiple cash flows",
    "text": "PV of multiple cash flows\nimport numpy as np\nm = 4\nr = 0.08\ny1, y2, y3, y4 = 100, 120, 130, 140, 150\ny = np.array([y1, y2, y3, y4])\npvFactors = (1+r)**np.arange(-1, -m-1, -1)\ntotal = np.sum(y*pvFactors)"
  },
  {
    "objectID": "a02-retirement-planning.html",
    "href": "a02-retirement-planning.html",
    "title": "Time and Money:Retirement Planning",
    "section": "",
    "text": "Let’s track a retirement account balance monthly.\nFor simplicity, assume the return is the same each month."
  },
  {
    "objectID": "a02-retirement-planning.html#our-goal",
    "href": "a02-retirement-planning.html#our-goal",
    "title": "Time and Money:Retirement Planning",
    "section": "Our goal",
    "text": "Our goal"
  },
  {
    "objectID": "returns.html",
    "href": "returns.html",
    "title": "",
    "section": "",
    "text": "Assignment 2\n\nAssignment 3"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Kerry Back  J. Howard Creekmore Professor of Finance and Professor of Economics KerryBack@gmail.com\n\n\n\n\nTime Value of Money (Kerry Back) - just one chapter, sorry\nCorporate Finance (Ivo Welch)\n\n\n\n\nThis course is an introduction to investments, including the analysis of corporate investment projects. We begin with foundational issues such as retirement planning and mortgage calculations. The next part of the course describes markets, assets, and properties of returns. We then study how to construct efficient portfolios of assets. The final part of the course pertains to the financial analysis of corporate projects.\nOur analysis tool throughout most of the course will be python. Python is both more transparent and quicker to write than are spreadsheets, which are conventional for a lot of the topics we will discuss. Furthermore, the use of python will allow us to go deeper into some of our topics than is possible with spreadsheets.\nCode snippets are sprinkled throughout the slides. Those snippets – plus the code used to generate all figures in the slides – are posted at the “Code Binder” link above. Clicking on that link will open a JupyterLab environment in your web browser. If you wish to do so, you can work in that environment for your assignments by launching a new notebook or modifying an existing notebook and downloading it. The binder is slow to load, so be patient.Alternatively, you can download notebooks from the github repo linked in the banner above.\n\n\n\nThere are seven sets of weekly assignments, due by midnight each Wednesday beginning January 22. The final grade will be based equally on the seven assignments."
  },
  {
    "objectID": "timevalue.html",
    "href": "timevalue.html",
    "title": "",
    "section": "",
    "text": "Inflation\nRetirement Planning\nRetirement Simulation\nPerpetuities and Annuities\nAmortization"
  },
  {
    "objectID": "portfolios.html",
    "href": "portfolios.html",
    "title": "",
    "section": "",
    "text": "Assignment 4\n\nAssignment 5"
  },
  {
    "objectID": "portfolios_capm.html",
    "href": "portfolios_capm.html",
    "title": "",
    "section": "",
    "text": "Portfolio Constraints\nPortfolios of Stocks, Bonds, and Gold\nAlphas and Betas\nCapital Asset Pricing Model"
  },
  {
    "objectID": "corporate.html",
    "href": "corporate.html",
    "title": "",
    "section": "",
    "text": "Assignment 6"
  },
  {
    "objectID": "asset_classes.html",
    "href": "asset_classes.html",
    "title": "",
    "section": "",
    "text": "Bonds\nBond Prices and Yields\nOther Asset Classes\nCorrelations of Asset classes"
  },
  {
    "objectID": "time_and_money.html",
    "href": "time_and_money.html",
    "title": "",
    "section": "",
    "text": "2. Monthly Rates, etc.\n3. Mortgage Payments etc.\n4. Inflation and Real Returns\n5. Retirement Planning\n6. Time-Varying Returns\n\nAssignment 1"
  },
  {
    "objectID": "returns.html#stylefloat-right",
    "href": "returns.html#stylefloat-right",
    "title": "",
    "section": "{style=float right}",
    "text": "{style=float right}\nDaily Returns\nGeometric Average Returns\nLong-Run Risk"
  },
  {
    "objectID": "returns.html#section-1",
    "href": "returns.html#section-1",
    "title": "",
    "section": "",
    "text": "Daily Returns\nGeometric Average Returns\nLong-Run Risk"
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "",
    "section": "",
    "text": "The six assignments for Module 1 are provided below. For each assignment, submit a Jupyter notebook on Canvas. If there are multiple questions in an assignment, copy each question into a Markdown cell and provide your answer in the cell or cells below it.\n\n\nAnswer each of the following.\n\nI have $50,000 now and I plan to invest $20,000 in one year and another $20,000 at the end of the following four years (five investments of $20,000 in five years in total). If I earn 6% per year on my investments, what will I have at the end of the five years, including the final investment?\nI have $50,000 now and plan to invest money at the end of this year and also for the following four years (five investments in five years in total). I expect to earn 6% per year. I hope to have $200,000 at the end of the five years, including the last investment. How much do I need to invest each year?\n\n\n\n\nAn investment earned 10%, 15%, -8%, -3%, and 20% over a five-year span. Answer each of the following.\n\nWhat were the corresponding continuously compounded returns?\nWhat was the sum of the continuously compounded returns?\nIf you started with $1 and earned these returns, what did you have at the end of the five years?\nHow does the natural exponential of the sum of the continuously compounded returns compare to the answer to (3)?\n\n\n\n\nAnswer each of the following.\n\nWhat would the monthly payments be on a 5-year loan for $40,000 at 6%?\nHow much can I borrow on a 5-year loan at 6% if I can afford to pay $500 per month?\nIf I want to borrow $40,000 on a 5-year loan and can afford to pay $500 per month, what monthly interest rate do I need to get? If a bank quotes an annual rate, what annual rate would I need?\n\n\n\n\nAnswer each of the following.\n\nAn investment earned 10%, 15%, -8%, -3%, and 20% over a five-year span. Inflation over the five years was 3%, 5%, 7%, 4%, and 2%.\nHow much did $1 at the beginning of the five years grow to in nominal terms? In real terms?\n\n\n\n\nYou plan to make monthly deposits to an account for the next 30 years and then make monthly withdrawals for 30 years with the same timing as in the lecture. There is $100,000 in the account now. Your first deposit will be $1,000 and the deposits will grow at 0.2% per month. Your withdrawals will be constant. Answer each of the following.\n\nHow much can you withdraw each month if you make (a) 0.3% per month, (b) 0.5% per month, (c) 0.8% per month?\nPlot the account balance over time for part (b) of question 1.\n\n\n\n\nYou plan to make monthly deposits to an account for the next 30 years and then make monthly withdrawals for 30 years with the same timing as in the lecture. There is $100,000 in the account now. Your first deposit will be $1,000 and the deposits will grow at 0.2% per month. From the previous set of practice questions, we know that you can withdraw $11,486.69 per month in retirement if you earn 0.5% per month on your investments. Suppose your actual returns are normally distributed with a mean of 0.5% per month and a standard deviation of 4% per month. Simulate returns and calculate the ending balance if you withdraw $11,486.69 per month and all of the other parameters are as specified. Repeat this 1,000 times and plot a histogram of the 1,000 ending balances from the 1,000 simulations."
  },
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "",
    "section": "",
    "text": "The assignments for Module 2 (other than Discussion Board assignments) are presented below. For each assignment, submit a Jupyter notebook on Canvas. If there are multiple questions in an assignment, copy each question into a Markdown cell and provide your answer in the cell or cells below it.\n\n\nDownload adjusted closing prices for CVX and SPY from Yahoo Finance and compute annual returns. Get the prices with only one call to the pandas datareader by inputting the list [“CVX”, “SPY”] as the first argument. Use “1970-01-01” as the start date and “2021-12-31” as the end date. Use the code from class to compute the annual returns.\nSome things worth pointing out:\n\nThe CVX returns will start in 1971 because when you down-sample to the last date of the year, the first date will be the end of 1970 and then when you compute percent changes the first non-missing value will be for 1971.\n\nSPY did not exist before 1993, so you will get NaNs as adjusted closing prices for SPY prior to 1993.\n\nYou cannot use an earlier start date than “1970-01-01” because Yahoo does not provide data prior to 1970.\nThe name of Chevron Corp. and its ticker symbol changed several times over the years as it changed from being part of Standard Oil and then acquired Texaco. But all of the data is available from Yahoo under the ticker symbol CVX.\n\n\n\n\nDownload adjusted closing prices for AAPL and compute daily, monthly, and annual returns for the five-year period 2017-2021. Construct three box plots - one for each set of returns. Use “2016-12-30” as the start date. What can we tell about outliers from the box plots?\n\n\n\nUsing Yahoo’s adjusted closing prices, compute annual returns for AAPL for the period 2000 through 2021. Calculate the arithmetic average annual return and the geometric average annual return.\n\n\n\nDraw 1,000 sets of 30 normally distributed random variables with a mean of 6% and a standard deviation of 10%. Viewing the variables as annual returns, compound them year by year over each 30-year period to obtain 1,000 time series of accumulations .\n\nCalculate and plot the standard deviation of the accumulations through each year (the x-axis should be 1, 2, …, 30 and the y-axis should be the std dev of the accumulation through year 1, year 2, …, year 30).\nIf the accumulation is less than 1, then an investment has lost money. Calculate and plot the fraction of the 1,000 returns for which the accumulation is less than 1 year-by-year (the plot should be the same as in (1) but the y-axis should have the fraction of losses through year 1, year 2, …, year 30)."
  },
  {
    "objectID": "assignment3.html",
    "href": "assignment3.html",
    "title": "",
    "section": "",
    "text": "The assignments for Module 3 (other than Discussion Board assignments) are presented below. For each python assignment, submit a Jupyter notebook on Canvas. If there are multiple questions in an assignment, copy each question into a Markdown cell and provide your answer in the cell or cells below it. For the Excel assignment, submit an Excel workbook on canvas.\n\n\nYou have a $50,000 portfolio. You are considering levering it – borrowing $25,000 to increase the investment to $75,000. You can borrow at 5%.\n\nSuppose the unlevered investment earns 10% and 5% interest is rolled into your debt. What are your assets, liabilities, and equity (equity = net portfolio value)? What was your return on your $50,000?\nRepeat part (1) assuming the unlevered investment loses 10%.\n\n\n\n\nA 6% coupon bond makes semi-annual coupon payments (3% each six months). It has 10 years to maturity, and the next coupon payment is six months away. Its current yield is 8%. What is its price?"
  },
  {
    "objectID": "assignment4.html",
    "href": "assignment4.html",
    "title": "",
    "section": "",
    "text": "Submit a Jupyter notebook. Copy each question into a Markdown cell and provide your answer in the cell or cells below it.\n\nTwo stocks have standard deviations of 30%.\n\n\nPlot the standard deviation of a 50-50 portfolio of the two stocks as a function of the correlation between them, for correlations between -1 and +1.\nPlot the Sharpe ratio of the 50-50 portfolio as a function of the correlation. Assume both assets have expected returns of 10% and the risk-free rate (saving rate) is 2%. Exclude the correlation of -1.\n\n\nThree assets have standard deviations of 20%, 30%, and 40%. Their expected returns are 10%, 15%, and 12%. Their correlations are corr12=0.1, corr13=0.3, corr23=0.5. Compute the mean and standard deviation of a portfolio that is 25% in stock 1, 50% in stock 2, and 25% in stock 3. Plot the assets and the portfolio in mean – standard deviation space.\nFor the data in question 2, find the least-risk portfolio with an expected return of 12%. Assume the saving and borrowing rate are both 2%."
  },
  {
    "objectID": "assignment5.html",
    "href": "assignment5.html",
    "title": "",
    "section": "",
    "text": "Submit a Jupyter notebook. Copy each question into a Markdown cell and provide your answer in the cell or cells below it.\n\nUse the asset data from questions 2 and 3 of Assignment 4, but assume the money market rate of return is 3% and the margin loan rate is 5%. Find the optimal portfolio for an investor with a risk aversion of 6 who does not want to sell anything short.\nA certain investment is a coin flip. You will either lose 10% of your portfolio or win some percent. Decide how large the win must be in order for you to be willing to flip the coin (there is no right or wrong answer for this). Calculate the number \\(A\\) such that \\[\\frac{x - 0.1}{2}  - \\frac{A}{2} \\left(\\frac{x+0.1}{2}\\right)^2 = 0\\] where \\(x\\) is the amount you need to win entered as a decimal. \\(A\\) is your risk aversion.\nThere is no coding required for this question. Use the webpage http://bbcx-investments.com/capm/costequity to calculate the expected return implied by the CAPM for United Airlines (ticker=UAL) and also the expected return implied by the CAPM for Kroger (ticker=KR). Report them in a Markdown cell. Explain why it would be reasonable to expect a higher return on United Airlines than on Kroger."
  },
  {
    "objectID": "assignment6.html",
    "href": "assignment6.html",
    "title": "",
    "section": "",
    "text": "Calculate the net present value of the following project. Submit an Excel workbook.\n\nThe XYZ company is considering launching a new product. Sales of the product are expected to rise and then diminish, and it is anticipated that the product will be abandoned after five years.\nSales (in millions of dollars) are projected as follows:\n\n\n\n\nYear\n0\n1\n2\n3\n4\n5\n\n\n\n\n\n\n100\n150\n200\n120\n80\n\n\n\n\nLabor and material costs for the product would be 50% of sales revenue.\nFor the first two years, the new product would reduce sales of existing products by $20 million and $10 million, respectively. The existing products have the same 50% gross margin.\nIncremental selling, general, and administrative expenses are forecast to be (in millions of dollars):\n\n\n\n\nYear\n0\n1\n2\n3\n4\n5\n\n\n\n\n\n\n20\n25\n15\n10\n5\n\n\n\n\nThe new product would require an investment of $100 million in 10-year MACRS equipment. The depreciation rates for the first five years are 10%, 18%, 14.4%, 11.52%, and 9.22%.\n\nIt is anticipated that the equipment could be sold for $60 million in five years.\n$15 million of materials inventory would be required immediately, and accounts payable would increase by $5 million.\n\nAfterwards, receivables would be 8% of sales, inventory would be 20% of COGS, and accounts payable would be 12% of COGS.\n\nAll working capital would be recovered in five years.\n\nThe corporate tax rate is 30%.\nThe cost of capital is 12%."
  },
  {
    "objectID": "accounting.html",
    "href": "accounting.html",
    "title": "",
    "section": "",
    "text": "Net PP&E\n\nRecord cost at date 0\nDepreciate over time according to tax schedule\n\nNet working capital\n\nInventory (usually % of COGS) plus accounts receivable (usually % of sales) minus accounts payable (usually % of COGS)\nEquals NWC\n\nInvested capital = Net PP&E + NWC\nZero out invested capital in last year\n\n\n\n\n\nSales\n\nminus Cost of Goods Sold\nminus Selling, General & Administrative\nminus Depreciation\nplus sales of PP&E\nminus book value of PP&E sold\n\nEquals pre-tax income (EBIT)\nminus taxes\nEquals net income\n\n\n\n\n\nNet income\nless change in invested capital\nEquals cash flow"
  },
  {
    "objectID": "accounting.html#project-cash-flows-busi-721-data-driven-finance-i-jones-graduate-school-of-business-rice-university",
    "href": "accounting.html#project-cash-flows-busi-721-data-driven-finance-i-jones-graduate-school-of-business-rice-university",
    "title": "",
    "section": "Project Cash FlowsBUSI 721Data Driven Finance IJones Graduate School of BusinessRice University",
    "text": "Project Cash FlowsBUSI 721Data Driven Finance IJones Graduate School of BusinessRice University\n\nBalance sheet\n\nNet PP&E\n\nRecord cost at date 0\nDepreciate over time according to tax schedule\n\nNet working capital\n\nInventory (usually % of COGS) plus accounts receivable (usually % of sales) minus accounts payable (usually % of COGS)\nEquals NWC\n\nInvested capital = Net PP&E + NWC\nZero out invested capital in last year\n\n\n\nIncome statement\n\nSales\n\nminus Cost of Goods Sold\nminus Selling, General & Administrative\nminus Depreciation\nplus sales of PP&E\nminus book value of PP&E sold\n\nEquals pre-tax income (EBIT)\nminus taxes\nEquals net income\n\n\n\nStatement of cash flows\n\nNet income\nless change in invested capital\nEquals cash flow"
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "",
    "section": "",
    "text": "1. Present and Future Values  2. Monthly Rates, etc.  3. Mortgage Payments etc.  4. Inflation and Real Returns  5. Retirement Planning  6. Time-Varying Returns\n\n\n\n1. Stock Markets  2. Stock Returns  3. Annual Returns  4. Daily Returns  5. Geometric Average Returns  6. Long-Run Risk\n\n\n\n1. Leverage  2. Short Selling  3. Funds 4. Bonds 5. Bond Prices and Yields  6. Other Assets\n\n\n\n\n1. Diversification  2. More Diversification 3. Saving and Borrowing  4. Mean-Variance Frontier 5. Frontier in Pictures 6. Capital Asset Pricing Model\n\n\n\n1. Preferences  2. Quadratic Programming  3. Frictions and Constraints  4. More Pictures  5. Estimating Parameters  6. Stocks, Bonds, and Gold\n\n\n\n1. Cash Flows and NPV 2. Economic Value Added  3. Financial Accounting  4. Example 1  5. Example 2  6. Example 3\n\n\n\n1. Internal Rate of Return  2. Perpetuities 3. Valuing Companies  4. Weighted Average Cost of Capital  5. Debt and Taxes  6. Debt and Cost of Capital"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "",
    "section": "",
    "text": "There are six assignments for each module, and they are provided at the links below. The assignments are a mix of python, Excel, and discussions.\n1. Time Value of Money\n2. Assets and Returns A\n3. Assets and Returns B\n4. Portfolios A\n5. Portfolios B\n6. Corporate Finance A\n7. Corporate Finance B"
  },
  {
    "objectID": "slides.html#assets-and-returns",
    "href": "slides.html#assets-and-returns",
    "title": "",
    "section": "Assets and Returns",
    "text": "Assets and Returns\n1. Stock Markets\n2. Stock Returns\n3. Annual Returns\n4. Daily Returns\n5. Geometric Average Returns\n6. Long-Run Risk\n7. Leverage\n8. Short Selling\n9. Funds\n10. Bonds\n11. Bond Prices and Yields\n12. Other Assets"
  },
  {
    "objectID": "slides.html#portfolios",
    "href": "slides.html#portfolios",
    "title": "",
    "section": "Portfolios",
    "text": "Portfolios\n1. Diversification\n2. More Diversification\n3. Saving and Borrowing\n4. Mean-Variance Frontier\n5. Frontier in Pictures\n6. Capital Asset Pricing Model\n7. Preferences\n8. Quadratic Programming\n9. Frictions and Constraints\n10. More Pictures\n11. Estimating Parameters\n12. Stocks, Bonds, and Gold"
  },
  {
    "objectID": "slides.html#corporate-finance",
    "href": "slides.html#corporate-finance",
    "title": "",
    "section": "Corporate Finance",
    "text": "Corporate Finance\n1. Cash Flows and NPV\n2. Economic Value Added\n3. Financial Accounting\n4. Example 1\n5. Example 2\n6. Example 3\n7. Internal Rate of Return\n8. Perpetuities\n9. Valuing Companies\n10. Weighted Average Cost of Capital\n11. Debt and Taxes\n12. Debt and Cost of Capital"
  },
  {
    "objectID": "assignment7.html",
    "href": "assignment7.html",
    "title": "",
    "section": "",
    "text": "Calculate the net present value of the following project. Submit an Excel workbook.\n\nThe XYZ company is considering launching a new product. Sales of the product are expected to rise and then diminish, and it is anticipated that the product will be abandoned after five years.\nSales (in millions of dollars) are projected as follows:\n\n\n\n\nYear\n0\n1\n2\n3\n4\n5\n\n\n\n\n\n\n100\n150\n200\n120\n80\n\n\n\n\nLabor and material costs for the product would be 50% of sales revenue.\nFor the first two years, the new product would reduce sales of existing products by $20 million and $10 million, respectively. The existing products have the same 50% gross margin.\nIncremental selling, general, and administrative expenses are forecast to be (in millions of dollars):\n\n\n\n\nYear\n0\n1\n2\n3\n4\n5\n\n\n\n\n\n\n20\n25\n15\n10\n5\n\n\n\n\nThe new product would require an investment of $100 million in 10-year MACRS equipment. The depreciation rates for the first five years are 10%, 18%, 14.4%, 11.52%, and 9.22%.\n\nIt is anticipated that the equipment could be sold for $60 million in five years.\n$15 million of materials inventory would be required immediately, and accounts payable would increase by $5 million.\n\nAfterwards, receivables would be 8% of sales, inventory would be 20% of COGS, and accounts payable would be 12% of COGS.\n\nAll working capital would be recovered in five years.\n\nThe corporate tax rate is 30%.\nThe cost of capital is 12%."
  },
  {
    "objectID": "live_sessions.html",
    "href": "live_sessions.html",
    "title": "",
    "section": "",
    "text": "Jan 13 \nJan 20\nJan 27\nFeb 3\nFeb 10"
  },
  {
    "objectID": "slides.html#slide-decks-data-driven-finance-i-spring-2025",
    "href": "slides.html#slide-decks-data-driven-finance-i-spring-2025",
    "title": "",
    "section": "",
    "text": "1. Present and Future Values  2. Monthly Rates, etc.  3. Mortgage Payments etc.  4. Inflation and Real Returns  5. Retirement Planning  6. Time-Varying Returns\n\n\n\n1. Stock Markets  2. Stock Returns  3. Annual Returns  4. Daily Returns  5. Geometric Average Returns  6. Long-Run Risk\n\n\n\n1. Leverage  2. Short Selling  3. Funds 4. Bonds 5. Bond Prices and Yields  6. Other Assets\n\n\n\n\n1. Diversification  2. More Diversification 3. Saving and Borrowing  4. Mean-Variance Frontier 5. Frontier in Pictures 6. Capital Asset Pricing Model\n\n\n\n1. Preferences  2. Quadratic Programming  3. Frictions and Constraints  4. More Pictures  5. Estimating Parameters  6. Stocks, Bonds, and Gold\n\n\n\n1. Cash Flows and NPV 2. Economic Value Added  3. Financial Accounting  4. Example 1  5. Example 2  6. Example 3\n\n\n\n1. Internal Rate of Return  2. Perpetuities 3. Valuing Companies  4. Weighted Average Cost of Capital  5. Debt and Taxes  6. Debt and Cost of Capital"
  },
  {
    "objectID": "index.html#syllabus-data-driven-finance-i-spring-2025",
    "href": "index.html#syllabus-data-driven-finance-i-spring-2025",
    "title": "",
    "section": "",
    "text": "Kerry Back  J. Howard Creekmore Professor of Finance and Professor of Economics KerryBack@gmail.com\n\n\n\n\nTime Value of Money (Kerry Back) - just one chapter, sorry\nCorporate Finance (Ivo Welch)\n\n\n\n\nThis course is an introduction to investments, including the analysis of corporate investment projects. We begin with foundational issues such as retirement planning and mortgage calculations. The next part of the course describes markets, assets, and properties of returns. We then study how to construct efficient portfolios of assets. The final part of the course pertains to the financial analysis of corporate projects.\nOur analysis tool throughout most of the course will be python. Python is both more transparent and quicker to write than are spreadsheets, which are conventional for a lot of the topics we will discuss. Furthermore, the use of python will allow us to go deeper into some of our topics than is possible with spreadsheets.\nCode snippets are sprinkled throughout the slides. Those snippets – plus the code used to generate all figures in the slides – are posted at the “Code Binder” link above. Clicking on that link will open a JupyterLab environment in your web browser. If you wish to do so, you can work in that environment for your assignments by launching a new notebook or modifying an existing notebook and downloading it. The binder is slow to load, so be patient.Alternatively, you can download notebooks from the github repo linked in the banner above.\n\n\n\nThere are seven sets of weekly assignments, due by midnight each Wednesday beginning January 22. The final grade will be based equally on the seven assignments."
  },
  {
    "objectID": "live_sessions.html#live-session-recordings-data-driven-finance-i-spring-2025",
    "href": "live_sessions.html#live-session-recordings-data-driven-finance-i-spring-2025",
    "title": "",
    "section": "",
    "text": "Jan 13 \nJan 20\nJan 27\nFeb 3\nFeb 10"
  }
]